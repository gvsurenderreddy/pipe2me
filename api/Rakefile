require "sinatra/activerecord/rake"
require_relative "config/environment"

namespace :sshd do
  require "ext/file_ext"

  # -- settings
  var_dir     = "#{ROOT}/var"
  sshd_dir    = "#{var_dir}/sshd"
  host_key    = "#{sshd_dir}/host_rsa_key"
  sshd_config = "#{sshd_dir}/sshd_config"
  authorized_keys = "#{sshd_dir}/authorized_keys"

  # -- files and directories
  directory sshd_dir

  file host_key => sshd_dir do
    system "ssh-keygen -t rsa -f #{host_key} -N ''"
  end

  task :sshd_config do
    File.atomic_write sshd_config, SSH.config(:sshd_dir => sshd_dir, :pid_file => "#{var_dir}/sshd.pid")
    STDERR.puts "Created #{sshd_config}"
  end

  # -- write the authorized_keys file for all subdomains.
  file authorized_keys => sshd_dir do
    File.atomic_write authorized_keys, SSH.authorized_keys
  end

  task :authorized_keys => authorized_keys do
    STDERR.puts "Created #{authorized_keys}"
  end

  desc "Start sshd server non-daemonized"
  task :exec => [ :authorized_keys, :sshd_config ] do
    File.atomic_write authorized_keys, SSH.authorized_keys

    STDERR.puts [ "/usr/sbin/sshd", "-D", "-e", "-f", sshd_config ] * " "
    Kernel.exec "/usr/sbin/sshd", "-D", "-e", "-d", "-f", sshd_config
  end
end
